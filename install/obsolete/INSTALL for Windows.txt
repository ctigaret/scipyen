 Installation of scipyen and its dependencies on Windows (10+)
 
 Requirements:
     
     1. Python 3.9.7 (use the installer from Python.org, NOT the app from Windows store)
     
     2. A virtual python environment created using 'virtualenv' (NOT conda/miniconda/anaconda, venv)
     
     3. A cloned git repository for scipyen (use the 'master' branch)
     
     4. A 'scipyen_sdk' directory containing 3rd party libraries (built against
    Python 3.9.7 and the virtual environment created as above)
     
     5. A 'vigra_pkg'  bundle with the built vigranumy modules.
     
     5. Optionally, a scipyen_sdk_src directory with the source code for building
     the 3rd patry libraries in (4)
     
Instructions:
    
    Option A: Build 3rd party software ("scipyen_sdk") from scratch (this will 
    also build vigranumpy) - follow the instructions in the file
        "BUILD scipyen_sdk for Windows 10 22a27.md"
        
    Option B: use pre-built 3rd party libraries in scipyen_sdk.zip and the 
    vigranumpy modules (also pre-built) in vigra_pkg.zip, as detailed below.
    
    Overview of steps for Option B:

    1.  Install python 3.9.7 from python.org; do NOT use Microsoft Store app
        
    2. Download and install git for windows10, 
        from https://git-scm.com/download/win. I use Git-2.33.0.2-64-bit.exe. 
        
        

    Steps for Option B:
        
    ATTENTION
    Throughout you must avoid:
        * path names with spaces or "funny" characters; best use alphanumeric 
            and underscore, avoid path names beginning with digits
        * using networked drives!
        
    There are three separate directories that will be created; ideally they would
    co-exist on the same local drive, or directory on the local drive, e.g.:
        
        c:\scipyenv - the virtual python environment for running scipyen
                        (see points 3 & 4, below)
        
        c:\scipyen_sdk - contains built 3rd party software needed by scipyen
                        (see point 5, below)
        
        c:\scipyen - the cloned git repo with scipyen (see point 6 below)

    1. Install Python 3.9.7 from python.org (DO NOT USE the APP from Windows store!)
        * install for everyone
        * allow lifting the limit to the PATH variable

    2. Install Git for windows 10; 
        * for everyone
        * let installer add it to the PATH (if asked)

    3. Install "virtualenv" utility:
        open a command prompt then call "pip install virtualenv"

    4. Create a pyton virtual environment "scipyenv"
        From the command prompt, navigate to a place without spaces in the path name, 
        on a drive with sufficient disk space (~ 10 GiB to accommodate scipyen 
        git repository clone, as well as the scipyen_sdk directory, see below)

        DO NOT USE NETWORKED (MAPPED) DRIVES!

        Open a command prompt then create virtual environment; that is, call:
            virtualenv scipyenv

        This will create a virtual environment directory called "scipyenv" in the same 
        directory where your command prompt is.
        
        NOTE: if you have admin right then go to the root of the partition e.g.
        in C:\, or E:\
        

    5. Extract scipyen_sdk.zip ideally in the same directory alongside the virtual
    environment => will create a directory "scipyen_sdk" with subdirectories such 
    as "bin", "lib", "lib64", "include" and so on, which contain the built 3rd party 
    libraries that scipyen uses.
    
    NOTE: The "scipyen_sdk" directory should be outside the scipyen git repository
    (see below)!

    6. Clone scipyen github repo => creates a "scipyen" directory containing the Scipyen python code
    (again, ideally, in the same directory containing scipyenv and scipyen_sdk)

        For example:
           c:\>git clone https://github.com/ctigaret/scipyen.git    
           
        => this creates the "scipyen" git repo containing scipyen python modules
        
        The cloned repo will be default contain the 'master' branch.
        Every now and then this should be synchronized to its remote origin by 
        this sequence of commands:
            
            git checkout master
            git pull
            
        * make sure you use the master branch and please don't change code inside;
        if you feel you'd like to make changes to scipyen's code base then please 
        fork it on github first and use your (forked) branch 
        

    7. From "scipyen\doc\install\win32 scripts" directory:
        
        copy scipyen_startup.py to the scipyen_sdk directory;
        copy scipyact.bat and scipyen.bat to a Scripts directory inside your home
            directory (this is the value of the %USERPROFILE% environment variable)
        
        e.g. copy those into c:\users\<user_name>\Scripts

        edit the copied *.bat files in order to:
            a) update the location of the environment "activate" script 
            b) set SDK to the correct location of scipyen_sdk

        add the c:\users\<user_name>\Scripts directory to your PATH environment 
            variable  (do this through the Windows 10 settings GUI -> search for
                       "environment", then  select "Edit environment variables 
                       for your account")
            
            In the new dialog select PATH then EDIT then NEW and Browse, etc...

    8. Start a command prompt and call 'scipyact' to activate the virtual environment

    9. Install python packages listed in the "requirements" file 
        'scipyen\doc\install\pip_requirements_windows.txt' using the command
        
        pip install -r <path_where_scipyen_is>\scipyen\doc\install\pip_requirements_windows.txt

    10. Extract vigra_pkg; copy its contents ("vigra" directory) to the 
        Lib\site-packages sub-directory of the virtual environment

    11. Open a new command prompt, activate the environment (call "scipyact") then
        start scipyen with "scipyen"

    You should be good to go.

    Tips:
        The cloned scipyen git repo can (and must) be placed outside the virtual 
        environment directory; like this, any upgrades can be made without breaking
        things.


        Use the "master" branch for scipyen ("dev" often breaks things)

        If and when new dependencies will be installed (e.g., neuron, a new 
        version of boost or vigra) these will be released independendently of 
        scipyen and packed in a scipyen_sdk.zip and vigra_pkg.zip files - available
        by request, not via this git repository!)






    
        
    
    
 
 
